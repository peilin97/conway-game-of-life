{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Gradient from \"javascript-color-gradient\";\nconst colorGradient = new Gradient();\ncolorGradient.setMidpoint(12);\ncolorGradient.setMidpoint(\"#000000\", \"#FFFFFF\");\nconst initialArray = colorGradient.getArray();\nexport const colorSlice = createSlice({\n  name: 'color',\n  initialState: {\n    livingColor: \"#000000\",\n    deadColor: \"#FFFFFF\",\n    heatMap: false,\n    colorGradientArray: initialArray\n  },\n  reducers: {\n    setLivingColor: (state, action) => {\n      state.livingColor = action.payload;\n      colorGradient.setMidpoint(action.payload, state.deadColor);\n      state.colorGradientArray = colorGradient.getArray();\n    },\n    setDeadColor: (state, action) => {\n      state.deadColor = action.payload;\n      colorGradient.setMidpoint(state.livingColor, action.payload);\n      state.colorGradientArray = colorGradient.getArray();\n    },\n    toggleHeatMap: state => {\n      state.heatMap = !state.heatMap;\n    }\n  }\n});\nexport const {\n  setLivingColor,\n  setDeadColor,\n  toggleHeatMap\n} = colorSlice.actions;\nexport const selectLivingColor = state => state.color.livingColor;\nexport const selectDeadColor = state => state.color.deadColor;\nexport const selectHeatMap = state => state.color.heatMap;\nexport const selectColorGradientArray = state => state.color.colorGradientArray;\nexport default colorSlice.reducer;","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/colorSlice.js"],"names":["createSlice","Gradient","colorGradient","setMidpoint","initialArray","getArray","colorSlice","name","initialState","livingColor","deadColor","heatMap","colorGradientArray","reducers","setLivingColor","state","action","payload","setDeadColor","toggleHeatMap","actions","selectLivingColor","color","selectDeadColor","selectHeatMap","selectColorGradientArray","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,MAAMC,aAAa,GAAG,IAAID,QAAJ,EAAtB;AACAC,aAAa,CAACC,WAAd,CAA0B,EAA1B;AACAD,aAAa,CAACC,WAAd,CAA0B,SAA1B,EAAqC,SAArC;AACA,MAAMC,YAAY,GAAGF,aAAa,CAACG,QAAd,EAArB;AAEA,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAClCO,EAAAA,IAAI,EAAC,OAD6B;AAElCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAE,SADJ;AAETC,IAAAA,SAAS,EAAE,SAFF;AAGTC,IAAAA,OAAO,EAAE,KAHA;AAITC,IAAAA,kBAAkB,EAAER;AAJX,GAFqB;AAQlCS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACAf,MAAAA,aAAa,CAACC,WAAd,CAA0Ba,MAAM,CAACC,OAAjC,EAA0CF,KAAK,CAACL,SAAhD;AACAK,MAAAA,KAAK,CAACH,kBAAN,GAA2BV,aAAa,CAACG,QAAd,EAA3B;AACH,KALK;AAMNa,IAAAA,YAAY,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACC,OAAzB;AACAf,MAAAA,aAAa,CAACC,WAAd,CAA0BY,KAAK,CAACN,WAAhC,EAA6CO,MAAM,CAACC,OAApD;AACAF,MAAAA,KAAK,CAACH,kBAAN,GAA2BV,aAAa,CAACG,QAAd,EAA3B;AACH,KAVK;AAWNc,IAAAA,aAAa,EAAGJ,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,CAACI,KAAK,CAACJ,OAAvB;AACH;AAbK;AARwB,CAAD,CAA9B;AAyBP,OAAO,MAAM;AAACG,EAAAA,cAAD;AACTI,EAAAA,YADS;AAETC,EAAAA;AAFS,IAGTb,UAAU,CAACc,OAHR;AAKP,OAAO,MAAMC,iBAAiB,GAAGN,KAAK,IAAIA,KAAK,CAACO,KAAN,CAAYb,WAA/C;AACP,OAAO,MAAMc,eAAe,GAAGR,KAAK,IAAIA,KAAK,CAACO,KAAN,CAAYZ,SAA7C;AACP,OAAO,MAAMc,aAAa,GAAGT,KAAK,IAAIA,KAAK,CAACO,KAAN,CAAYX,OAA3C;AACP,OAAO,MAAMc,wBAAwB,GAAGV,KAAK,IAAIA,KAAK,CAACO,KAAN,CAAYV,kBAAtD;AAEP,eAAeN,UAAU,CAACoB,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport Gradient from \"javascript-color-gradient\";\n\nconst colorGradient = new Gradient();\ncolorGradient.setMidpoint(12);\ncolorGradient.setMidpoint(\"#000000\", \"#FFFFFF\");\nconst initialArray = colorGradient.getArray();\n\nexport const colorSlice = createSlice({\n    name:'color',\n    initialState:{\n        livingColor: \"#000000\",\n        deadColor: \"#FFFFFF\",\n        heatMap: false,\n        colorGradientArray: initialArray\n    },\n    reducers: {\n        setLivingColor: (state, action) => {\n            state.livingColor = action.payload\n            colorGradient.setMidpoint(action.payload, state.deadColor)\n            state.colorGradientArray = colorGradient.getArray()\n        },\n        setDeadColor: (state, action) => {\n            state.deadColor = action.payload\n            colorGradient.setMidpoint(state.livingColor, action.payload)\n            state.colorGradientArray = colorGradient.getArray()\n        },\n        toggleHeatMap: (state) => {\n            state.heatMap = !state.heatMap\n        }\n    },\n})\n\nexport const {setLivingColor,\n    setDeadColor,\n    toggleHeatMap,\n} = colorSlice.actions;\n\nexport const selectLivingColor = state => state.color.livingColor;\nexport const selectDeadColor = state => state.color.deadColor;\nexport const selectHeatMap = state => state.color.heatMap;\nexport const selectColorGradientArray = state => state.color.colorGradientArray;\n\nexport default colorSlice.reducer;"]},"metadata":{},"sourceType":"module"}