{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { resetGrid, initializeGridAndNeighbors, setCellSize } from '../game/grid/gridSlice';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './home.css';\nexport default function Home() {\n  _s();\n\n  const isLG = useMediaQuery({\n    query: '(min-device-width: 1200px)'\n  });\n  const isMD = useMediaQuery({\n    query: '(min-device-width: 992px)'\n  });\n  const isSM = useMediaQuery({\n    query: '(min-device-width: 768px)'\n  });\n  const isXS = useMediaQuery({\n    query: '(min-device-width: 500px)'\n  });\n\n  const setLength = () => {\n    let gridLength;\n\n    if (isLG) {\n      gridLength = 700;\n    } else if (isMD) {\n      gridLength = 600;\n    } else if (isSM) {\n      gridLength = 500;\n    } else if (isXS) {\n      gridLength = 400;\n    } else {\n      gridLength = 300;\n    }\n\n    return gridLength;\n  };\n\n  const dispatch = useDispatch();\n  dispatch(resetGrid());\n  const [width, setWidth] = useState(50);\n  const [height, setHeight] = useState(50);\n\n  const handleSizeChange = () => {\n    dispatch({\n      type: 'grid/setSize',\n      payload: {\n        width: width,\n        height: height\n      }\n    });\n    dispatch(initializeGridAndNeighbors());\n    let gridLength = setLength();\n    console.log(gridLength);\n    dispatch(setCellSize(gridLength));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customJumbotron homeContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"First, set the width and the height!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"forWidth\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Width: \", width, \" cells\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          custom: true,\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: width,\n          onChange: e => setWidth(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"forHeight\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Height: \", height, \" cells\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          custom: true,\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: height,\n          onChange: e => setHeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      onClick: handleSizeChange,\n      exact: true,\n      to: '/lifesimulation',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-dark\",\n        children: \"Enter the Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"NvAygl2A4on/IsVuDk1tNOf/IVc=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useDispatch];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/home/Home.jsx"],"names":["React","useState","useMediaQuery","useDispatch","Link","resetGrid","initializeGridAndNeighbors","setCellSize","Button","Form","Home","isLG","query","isMD","isSM","isXS","setLength","gridLength","dispatch","width","setWidth","height","setHeight","handleSizeChange","type","payload","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n    resetGrid,\n    initializeGridAndNeighbors,\n    setCellSize,\n} from '../game/grid/gridSlice';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './home.css';\n\nexport default function Home() {\n    const isLG = useMediaQuery({\n        query: '(min-device-width: 1200px)'\n    });\n    const isMD = useMediaQuery({\n        query: '(min-device-width: 992px)'\n    });\n    const isSM = useMediaQuery({\n        query: '(min-device-width: 768px)'\n    });\n    const isXS = useMediaQuery({\n        query: '(min-device-width: 500px)'\n    });\n    const setLength = () => {\n        let gridLength;\n        if (isLG) {\n            gridLength = 700;\n        } else if (isMD) {\n            gridLength = 600;\n        } else if (isSM) {\n            gridLength = 500;\n        } else if (isXS) {\n            gridLength = 400;\n        } else {\n            gridLength = 300;\n        }\n        return gridLength;\n    };\n    const dispatch = useDispatch();\n    dispatch(resetGrid());\n    const [width, setWidth] = useState(50);\n    const [height, setHeight] = useState(50);\n\n    const handleSizeChange = () => {\n        dispatch({\n            type: 'grid/setSize',\n            payload: { width: width, height: height },\n        });\n        dispatch(initializeGridAndNeighbors());\n        let gridLength = setLength();\n        console.log(gridLength);\n        dispatch(setCellSize(gridLength));\n    };\n\n    return (\n        <div className=\"customJumbotron homeContainer\">\n            <h1>First, set the width and the height!</h1>\n            <Form>\n                <Form.Group controlId=\"forWidth\">\n                    <Form.Label>Width: {width} cells</Form.Label>\n                    <Form.Control\n                        custom\n                        type=\"range\"\n                        min=\"10\"\n                        max=\"100\"\n                        value={width}\n                        onChange={e => setWidth(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"forHeight\">\n                    <Form.Label>Height: {height} cells</Form.Label>\n                    <Form.Control\n                        custom\n                        type=\"range\"\n                        min=\"10\"\n                        max=\"100\"\n                        value={height}\n                        onChange={e => setHeight(e.target.value)}\n                    />\n                </Form.Group>\n            </Form>\n            <Link onClick={handleSizeChange} exact to={'/lifesimulation'}>\n                <Button variant=\"outline-dark\">Enter the Game</Button>\n            </Link>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}