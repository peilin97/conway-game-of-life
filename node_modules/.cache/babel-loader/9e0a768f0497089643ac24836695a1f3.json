{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import Container from 'react-bootstrap/Container'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectGrid, updateGridAndNeighbors, initializeGridAndNeighbors } from './gridSlice';\nimport { selectStart } from './gameStateSlice';\nimport Cell from './Cell';\nexport default function Grid() {\n  _s();\n\n  const grid = useSelector(selectGrid);\n  const start = useSelector(selectStart);\n  const dispatch = useDispatch(); // initialization\n\n  if (grid.length === 0) {\n    dispatch(initializeGridAndNeighbors());\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (start) {\n        dispatch(updateGridAndNeighbors());\n      }\n    }, 5000);\n    return () => clearTimeout(timer);\n  }); // const grid = useSelector(selectGrid)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: grid.map(function (row, rowId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((val, colId) => /*#__PURE__*/_jsxDEV(Cell, {\n          pos: [rowId, colId]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"FNMKx0yeEWNV9ENVra5M01ExY8k=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Grid.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","selectGrid","updateGridAndNeighbors","initializeGridAndNeighbors","selectStart","Cell","Grid","grid","start","dispatch","length","timer","setTimeout","clearTimeout","map","row","rowId","val","colId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,UADJ,EAEIC,sBAFJ,EAGIC,0BAHJ,QAIQ,aAJR;AAKA,SACIC,WADJ,QAEO,kBAFP;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,IAAI,GAAGP,WAAW,CAACC,UAAD,CAAxB;AACA,QAAMO,KAAK,GAAGR,WAAW,CAACI,WAAD,CAAzB;AACA,QAAMK,QAAQ,GAAGV,WAAW,EAA5B,CAH2B,CAI3B;;AACA,MAAIQ,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACnBD,IAAAA,QAAQ,CAACN,0BAA0B,EAA3B,CAAR;AACH;;AACDN,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMc,KAAK,GAAGC,UAAU,CACpB,MAAM;AACF,UAAIJ,KAAJ,EAAW;AACPC,QAAAA,QAAQ,CAACP,sBAAsB,EAAvB,CAAR;AAAmC;AAAC,KAHxB,EAIZ,IAJY,CAAxB;AAMA,WAAO,MAAMW,YAAY,CAACF,KAAD,CAAzB;AACH,GARQ,CAAT,CAR2B,CAkB3B;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKJ,IAAI,CAACO,GAAL,CAAS,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3B,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACCD,GAAG,CAACD,GAAJ,CACG,CAACG,GAAD,EAAMC,KAAN,kBAAe,QAAC,IAAD;AAAM,UAAA,GAAG,EAAE,CAACF,KAAD,EAAQE,KAAR;AAAX;AAAA;AAAA;AAAA;AAAA,gBADlB;AADD;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAjCuBZ,I;UACPN,W,EACCA,W,EACGD,W;;;KAHGO,I","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import Container from 'react-bootstrap/Container'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    selectGrid,\n    updateGridAndNeighbors,\n    initializeGridAndNeighbors\n } from './gridSlice'\nimport {\n    selectStart\n} from './gameStateSlice'\nimport Cell from './Cell'\n\nexport default function Grid() {\n    const grid = useSelector(selectGrid)\n    const start = useSelector(selectStart)\n    const dispatch = useDispatch()\n    // initialization\n    if (grid.length === 0) {\n        dispatch(initializeGridAndNeighbors())\n    }\n    useEffect(()=>{\n        const timer = setTimeout(\n            () => {\n                if (start) {\n                    dispatch(updateGridAndNeighbors())}},\n                    5000\n                    );\n        return () => clearTimeout(timer);\n    });\n    \n    // const grid = useSelector(selectGrid)\n    \n    return (\n        <div className=\"container\"> \n            {grid.map(function(row, rowId) {\n                return (\n                    <div className=\"row\">\n                    {row.map(\n                        (val, colId)=> <Cell pos={[rowId, colId]}/>\n                    )}\n                    </div>\n                    )\n            })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}