{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/game/grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectGrid, updateGridAndNeighbors, setCellSize, setGridLength } from './gridSlice';\nimport { selectStart } from '../buttons/gameStateSlice';\nimport { selectSpeed } from '../speed/speedSlice';\nimport Cell from './Cell';\nimport './grid.css';\nexport default function Grid() {\n  _s();\n\n  const grid = useSelector(selectGrid);\n  const start = useSelector(selectStart);\n  const speed = useSelector(selectSpeed);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (start) {\n        dispatch(updateGridAndNeighbors());\n      }\n    }, Number(speed));\n\n    const handleResize = () => {\n      dispatch(setGridLength());\n      dispatch(setCellSize());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return _ => {\n      window.removeEventListener('resize', handleResize);\n      clearTimeout(timer);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexRow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridContainer\",\n      children: grid.map(function (row, rowId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gridRow\",\n          children: row.map((val, colId) => /*#__PURE__*/_jsxDEV(Cell, {\n            pos: [rowId, colId]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"6SsNfkhB1FFIjtIYDUvIRu39Fq8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/game/grid/Grid.jsx"],"names":["React","useEffect","useDispatch","useSelector","selectGrid","updateGridAndNeighbors","setCellSize","setGridLength","selectStart","selectSpeed","Cell","Grid","grid","start","speed","dispatch","timer","setTimeout","Number","handleResize","window","addEventListener","_","removeEventListener","clearTimeout","map","row","rowId","val","colId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,UADJ,EAEIC,sBAFJ,EAGIC,WAHJ,EAIIC,aAJJ,QAKO,aALP;AAMA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,YAAP;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,IAAI,GAAGT,WAAW,CAACC,UAAD,CAAxB;AACA,QAAMS,KAAK,GAAGV,WAAW,CAACK,WAAD,CAAzB;AACA,QAAMM,KAAK,GAAGX,WAAW,CAACM,WAAD,CAAzB;AAEA,QAAMM,QAAQ,GAAGb,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3B,UAAIJ,KAAJ,EAAW;AACPE,QAAAA,QAAQ,CAACV,sBAAsB,EAAvB,CAAR;AACH;AACJ,KAJuB,EAIrBa,MAAM,CAACJ,KAAD,CAJe,CAAxB;;AAKA,UAAMK,YAAY,GAAG,MAAM;AACvBJ,MAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAQ,MAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACH,KAHD;;AAIAc,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAOG,CAAC,IAAI;AACRF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACAK,MAAAA,YAAY,CAACR,KAAD,CAAZ;AACH,KAHD;AAIH,GAfQ,CAAT;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKJ,IAAI,CAACa,GAAL,CAAS,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC5B,4BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBACKD,GAAG,CAACD,GAAJ,CAAQ,CAACG,GAAD,EAAMC,KAAN,kBACL,QAAC,IAAD;AAAM,YAAA,GAAG,EAAE,CAACF,KAAD,EAAQE,KAAR;AAAX;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAvCuBlB,I;UACPR,W,EACCA,W,EACAA,W,EAEGD,W;;;KALGS,I","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectGrid,\n    updateGridAndNeighbors,\n    setCellSize,\n    setGridLength,\n} from './gridSlice';\nimport { selectStart } from '../buttons/gameStateSlice';\nimport { selectSpeed } from '../speed/speedSlice';\nimport Cell from './Cell';\nimport './grid.css';\n\nexport default function Grid() {\n    const grid = useSelector(selectGrid);\n    const start = useSelector(selectStart);\n    const speed = useSelector(selectSpeed);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (start) {\n                dispatch(updateGridAndNeighbors());\n            }\n        }, Number(speed));\n        const handleResize = () => {\n            dispatch(setGridLength());\n            dispatch(setCellSize());\n        };\n        window.addEventListener('resize', handleResize);\n        return _ => {\n            window.removeEventListener('resize', handleResize);\n            clearTimeout(timer);\n        };\n    });\n\n    return (\n        <div className=\"flexRow\">\n            <div className=\"gridContainer\">\n                {grid.map(function (row, rowId) {\n                    return (\n                        <div className=\"gridRow\">\n                            {row.map((val, colId) => (\n                                <Cell pos={[rowId, colId]} />\n                            ))}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}