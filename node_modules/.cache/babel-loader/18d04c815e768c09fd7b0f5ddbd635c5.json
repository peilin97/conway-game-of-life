{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Frequency.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSpeed, setSpeed } from './speedSlice';\nimport { selectStart } from './gameStateSlice';\nimport Form from 'react-bootstrap/Form';\nexport default function Frequency() {\n  _s();\n\n  const frq = useSelector(selectSpeed);\n  const start = useSelector(selectStart);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"forSpeed\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Update Speed: \", (frq / 1000).toFixed(2), \" s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"range\",\n          min: \"50\",\n          max: \"2000\",\n          id: \"speed\",\n          name: \"speed\",\n          value: frq,\n          disabled: start ? \"disabled\" : null,\n          onChange: e => dispatch(setSpeed(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Frequency, \"3lfZTznhshR93TBUNH05v9D0pwA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Frequency;\n\nvar _c;\n\n$RefreshReg$(_c, \"Frequency\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Frequency.jsx"],"names":["React","useDispatch","useSelector","selectSpeed","setSpeed","selectStart","Form","Frequency","frq","start","dispatch","toFixed","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,WADJ,EAEIC,QAFJ,QAGO,cAHP;AAIA,SACIC,WADJ,QAEO,kBAFP;AAGA,OAAOC,IAAP,MAAiB,sBAAjB;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,GAAG,GAAGN,WAAW,CAACC,WAAD,CAAvB;AACA,QAAMM,KAAK,GAAGP,WAAW,CAACG,WAAD,CAAzB;AACA,QAAMK,QAAQ,GAAGT,WAAW,EAA5B;AACA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,uCAA2B,CAACO,GAAG,GAAC,IAAL,EAAWG,OAAX,CAAmB,CAAnB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,GAAG,EAAC,IAA/B;AAAoC,UAAA,GAAG,EAAC,MAAxC;AACA,UAAA,EAAE,EAAC,OADH;AACW,UAAA,IAAI,EAAC,OADhB;AACwB,UAAA,KAAK,EAAEH,GAD/B;AAEA,UAAA,QAAQ,EAAEC,KAAK,GAAG,UAAH,GAAgB,IAF/B;AAGA,UAAA,QAAQ,EAAEG,CAAC,IAAIF,QAAQ,CAACN,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAHvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBE;;GArBkBP,S;UACRL,W,EACEA,W,EACGD,W;;;KAHGM,S","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    selectSpeed,\n    setSpeed,\n} from './speedSlice'\nimport {\n    selectStart\n} from './gameStateSlice'\nimport Form from 'react-bootstrap/Form'\n\n\nexport default function Frequency() {\n    const frq = useSelector(selectSpeed)\n    const start = useSelector(selectStart)\n    const dispatch = useDispatch()\n    return (\n        <div>\n            <Form>\n                <Form.Group controlId=\"forSpeed\">\n                    <Form.Label>Update Speed: {(frq/1000).toFixed(2)} s</Form.Label>\n                    <Form.Control type=\"range\" min=\"50\" max=\"2000\"\n                    id=\"speed\" name=\"speed\" value={frq}\n                    disabled={start ? \"disabled\" : null}\n                    onChange={e => dispatch(setSpeed(e.target.value))}/>\n                </Form.Group>\n            </Form>\n            {/* <input type=\"range\" min=\"50\" max=\"2000\"\n            id=\"speed\" name=\"speed\" value={frq}\n            disabled={start ? \"disabled\" : null}\n            onChange={e => dispatch(setSpeed(e.target.value))}></input>\n            <label for=\"speed\">Update Speed: {(frq/1000).toFixed(2)} s</label> */}\n        </div>\n    )} "]},"metadata":{},"sourceType":"module"}