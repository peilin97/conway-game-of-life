{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Color.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDeadColor, selectDeadColor, setLivingColor, selectLivingColor, toggleHeatMap } from './colorSlice';\nimport { selectStart } from './gameStateSlice';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nexport default function Color() {\n  _s();\n\n  const dispatch = useDispatch();\n  const livingColor = useSelector(selectLivingColor);\n  const deadColor = useSelector(selectDeadColor);\n  const start = useSelector(selectStart);\n  const [displayLivingPicker, setLivingDisplay] = useState(false);\n  const [displayDeadPicker, setDeadDisplay] = useState(false);\n  const styles = reactCSS({\n    'default': {\n      living: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: `${livingColor}`\n      },\n      dead: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: `${deadColor}`\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2'\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      }\n    }\n  });\n\n  const handleLivingClick = () => {\n    if (!start) {\n      setLivingDisplay(!displayLivingPicker);\n    }\n  };\n\n  const handleDeadClick = () => {\n    if (!start) {\n      setDeadDisplay(!displayDeadPicker);\n    }\n  };\n\n  const handleLivingClose = () => {\n    if (!start) {\n      setLivingDisplay(false);\n    }\n  };\n\n  const handleDeadClose = () => {\n    if (!start) {\n      setDeadDisplay(false);\n    }\n  };\n\n  const handleLivingChange = color => {\n    if (!start) {\n      dispatch(setLivingColor(color.hex));\n    }\n  };\n\n  const handleDeadChange = color => {\n    if (!start) {\n      dispatch(setDeadColor(color.hex));\n    }\n  };\n\n  const handleHeatMap = () => {\n    if (!start) {\n      dispatch(toggleHeatMap());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonText\",\n          children: \"Living Cell's Color \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.swatch,\n          onClick: handleLivingClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.living\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), displayLivingPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.popover,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.cover,\n            onClick: handleLivingClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n            color: livingColor,\n            onChange: handleLivingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonText\",\n          children: \"Dead Cell's Color \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.swatch,\n          onClick: handleDeadClick,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.dead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), displayDeadPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.popover,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.cover,\n            onClick: handleDeadClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n            color: deadColor,\n            onChange: handleDeadChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 43\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"heatmap\",\n        onChange: handleHeatMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"heatmap\",\n        children: \"Heat Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this) // <div>\n  //         <div>Living Cell's Color\n  //         <div style={ styles.swatch } onClick={ handleLivingClick }>\n  //             <div style={ styles.living } />\n  //             </div>\n  //             { displayLivingPicker ? <div style={ styles.popover }>\n  //             <div style={ styles.cover } onClick={ handleLivingClose }/>\n  //             <SketchPicker color={ livingColor } onChange={ handleLivingChange } />\n  //             </div> : null }\n  //         </div>\n  //         <div> Dead Cell's Color:\n  //             <div style={ styles.swatch } onClick={ handleDeadClick }>\n  //             <div style={ styles.dead } />\n  //             </div>\n  //             { displayDeadPicker ? <div style={ styles.popover }>\n  //             <div style={ styles.cover } onClick={ handleDeadClose }/>\n  //             <SketchPicker color={ deadColor } onChange={ handleDeadChange } />\n  //             </div> : null }\n  //         </div>\n  //     <input type=\"checkbox\" id=\"heatmap\" onChange={ handleHeatMap } />\n  //     <label for=\"heatmap\" >Heat Map</label>\n  // </div>\n  ;\n}\n\n_s(Color, \"xrxH3d7pZdxd+jyOC/DmVo/UNg4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Color.jsx"],"names":["React","useState","reactCSS","SketchPicker","useDispatch","useSelector","setDeadColor","selectDeadColor","setLivingColor","selectLivingColor","toggleHeatMap","selectStart","Container","Row","Col","Color","dispatch","livingColor","deadColor","start","displayLivingPicker","setLivingDisplay","displayDeadPicker","setDeadDisplay","styles","living","width","height","borderRadius","background","dead","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","handleLivingClick","handleDeadClick","handleLivingClose","handleDeadClose","handleLivingChange","color","hex","handleDeadChange","handleHeatMap"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    setDeadColor,\n    selectDeadColor,\n    setLivingColor,\n    selectLivingColor,\n    toggleHeatMap,\n} from './colorSlice'\nimport {\n    selectStart\n} from './gameStateSlice'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\n\nexport default function Color() {\n    const dispatch = useDispatch()\n    const livingColor = useSelector(selectLivingColor)\n    const deadColor = useSelector(selectDeadColor)\n    const start = useSelector(selectStart)\n    const [displayLivingPicker, setLivingDisplay] = useState(false)\n    const [displayDeadPicker, setDeadDisplay] = useState(false)\n    \n    const styles = reactCSS({\n        'default': {\n          living: {\n            width: '36px',\n            height: '14px',\n            borderRadius: '2px',\n            background: `${ livingColor }`,\n          },\n          dead: {\n            width: '36px',\n            height: '14px',\n            borderRadius: '2px',\n            background: `${ deadColor }`,\n          },\n          swatch: {\n            padding: '5px',\n            background: '#fff',\n            borderRadius: '1px',\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n            display: 'inline-block',\n            cursor: 'pointer',\n          },\n          popover: {\n            position: 'absolute',\n            zIndex: '2',\n          },\n          cover: {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n          },\n        },\n      });\n\n    const handleLivingClick = () => {\n        if (!start) {\n            setLivingDisplay(!displayLivingPicker)\n        }\n    };\n\n    const handleDeadClick = () => {\n        if (!start) {\n            setDeadDisplay(!displayDeadPicker)\n        }\n    };\n    \n    const handleLivingClose = () => {\n        if (!start) {\n            setLivingDisplay(false)\n        }\n    };\n\n    const handleDeadClose = () => {\n        if (!start) {\n            setDeadDisplay(false)\n        }\n    };\n\n    const handleLivingChange = (color) => {\n        if (!start) {\n            dispatch(setLivingColor(color.hex))\n        }\n    };\n\n    const handleDeadChange = (color) => {\n        if (!start) {\n            dispatch(setDeadColor(color.hex))\n        }\n    };\n\n    const handleHeatMap = () => {\n        if (!start) {\n            dispatch(toggleHeatMap())\n        }\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <div className=\"buttonText\">Living Cell's Color </div>\n                    <div style={ styles.swatch } onClick={ handleLivingClick }>\n                        <div style={ styles.living } />\n                    </div>\n                    { displayLivingPicker ? <div style={ styles.popover }>\n                    <div style={ styles.cover } onClick={ handleLivingClose }/>\n                    <SketchPicker color={ livingColor } onChange={ handleLivingChange } />\n                    </div> : null }\n                    \n                </Col>\n                <Col>\n                    <div className=\"buttonText\">Dead Cell's Color </div>\n                    <div style={ styles.swatch } onClick={ handleDeadClick }>\n                    <div style={ styles.dead } />\n                    </div>\n                    { displayDeadPicker ? <div style={ styles.popover }>\n                    <div style={ styles.cover } onClick={ handleDeadClose }/>\n                    <SketchPicker color={ deadColor } onChange={ handleDeadChange } />\n                    </div> : null }\n                \n                </Col>\n            </Row>\n            <Row>\n            <input type=\"checkbox\" id=\"heatmap\" onChange={ handleHeatMap } />\n            <label for=\"heatmap\" >Heat Map</label>\n            </Row>\n        </Container>\n        // <div>\n            \n        //         <div>Living Cell's Color\n        //         <div style={ styles.swatch } onClick={ handleLivingClick }>\n        //             <div style={ styles.living } />\n        //             </div>\n        //             { displayLivingPicker ? <div style={ styles.popover }>\n        //             <div style={ styles.cover } onClick={ handleLivingClose }/>\n        //             <SketchPicker color={ livingColor } onChange={ handleLivingChange } />\n        //             </div> : null }\n        //         </div>\n        //         <div> Dead Cell's Color:\n        //             <div style={ styles.swatch } onClick={ handleDeadClick }>\n        //             <div style={ styles.dead } />\n        //             </div>\n        //             { displayDeadPicker ? <div style={ styles.popover }>\n        //             <div style={ styles.cover } onClick={ handleDeadClose }/>\n        //             <SketchPicker color={ deadColor } onChange={ handleDeadChange } />\n        //             </div> : null }\n        //         </div>\n            \n\n        //     <input type=\"checkbox\" id=\"heatmap\" onChange={ handleHeatMap } />\n        //     <label for=\"heatmap\" >Heat Map</label>\n        // </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}