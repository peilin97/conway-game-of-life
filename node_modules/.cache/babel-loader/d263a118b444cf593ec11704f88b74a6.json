{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import Container from 'react-bootstrap/Container'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectGrid, updateAsync, updateGridAndNeighbors, initializeGridAndNeighbors } from './gridSlice';\nimport Cell from './Cell';\nexport default function Grid() {\n  _s();\n\n  const initialGrid = useSelector(selectGrid);\n  const dispatch = useDispatch(); // initialization\n\n  if (initialGrid.length === 0) {\n    dispatch(initializeGridAndNeighbors());\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log(\"enter effect\");\n      dispatch(updateGridAndNeighbors());\n    }, 5000);\n    return () => clearTimeout(timer);\n  });\n  const grid = useSelector(selectGrid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: grid.map(function (row, rowId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((val, colId) => /*#__PURE__*/_jsxDEV(Cell, {\n          pos: [rowId, colId]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"Z9ellK/IzRrSyYG/BL8xL/URZ8E=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Grid.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","selectGrid","updateAsync","updateGridAndNeighbors","initializeGridAndNeighbors","Cell","Grid","initialGrid","dispatch","length","timer","setTimeout","console","log","clearTimeout","grid","map","row","rowId","val","colId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,UADJ,EAEIC,WAFJ,EAGIC,sBAHJ,EAIIC,0BAJJ,QAKQ,aALR;AAMA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,WAAW,GAAGP,WAAW,CAACC,UAAD,CAA/B;AACA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B,CAF2B,CAG3B;;AACA,MAAIQ,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B;AAC1BD,IAAAA,QAAQ,CAACJ,0BAA0B,EAA3B,CAAR;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,KAAK,GAAGC,UAAU,CACpB,MAAM;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAL,MAAAA,QAAQ,CAACL,sBAAsB,EAAvB,CAAR;AAAmC,KAHnB,EAIpB,IAJoB,CAAxB;AAMA,WAAO,MAAMW,YAAY,CAACJ,KAAD,CAAzB;AACH,GARQ,CAAT;AAUA,QAAMK,IAAI,GAAGf,WAAW,CAACC,UAAD,CAAxB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKc,IAAI,CAACC,GAAL,CAAS,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC3B,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACCD,GAAG,CAACD,GAAJ,CACG,CAACG,GAAD,EAAMC,KAAN,kBAAe,QAAC,IAAD;AAAM,UAAA,GAAG,EAAE,CAACF,KAAD,EAAQE,KAAR;AAAX;AAAA;AAAA;AAAA;AAAA,gBADlB;AADD;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAjCuBd,I;UACAN,W,EACHD,W,EAgBJC,W;;;KAlBOM,I","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import Container from 'react-bootstrap/Container'\n// import Row from 'react-bootstrap/Row'\n// import Col from 'react-bootstrap/Col'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    selectGrid,\n    updateAsync,\n    updateGridAndNeighbors,\n    initializeGridAndNeighbors\n } from './gridSlice'\nimport Cell from './Cell'\n\nexport default function Grid() {\n    const initialGrid = useSelector(selectGrid)\n    const dispatch = useDispatch()\n    // initialization\n    if (initialGrid.length === 0) {\n        dispatch(initializeGridAndNeighbors())\n    }\n\n    useEffect(()=>{\n        const timer = setTimeout(\n            () => {\n                console.log(\"enter effect\")\n                dispatch(updateGridAndNeighbors())},\n            5000\n        );\n        return () => clearTimeout(timer);\n    });\n\n    const grid = useSelector(selectGrid)\n    \n    return (\n        <div className=\"container\"> \n            {grid.map(function(row, rowId) {\n                return (\n                    <div className=\"row\">\n                    {row.map(\n                        (val, colId)=> <Cell pos={[rowId, colId]}/>\n                    )}\n                    </div>\n                    )\n            })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}