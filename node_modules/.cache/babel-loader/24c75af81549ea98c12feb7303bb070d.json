{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const gridSlice = createSlice({\n  name: 'size',\n  initialState: {\n    width: 0,\n    height: 0,\n    grid: [],\n    livingNeighbors: []\n  },\n  reducers: {\n    setSize: (state, action) => {\n      state.width = action.payload.width;\n      state.height = action.payload.height;\n    },\n    initializeGridAndNeighbors: state => {\n      for (let i = 0; i < state.height; i++) {\n        let row = [];\n\n        for (let j = 0; j < state.width; j++) {\n          row.push(0);\n        }\n\n        state.livingNeighbors.push(row);\n      }\n    }\n  }\n});\nexport const {\n  setSize\n} = gridSlice.actions;\nexport const selectWidth = state => state.size.width;\nexport const selectHeight = state => state.size.height;\nexport default gridSlice.reducer;","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/sizeSlice.js"],"names":["createSlice","gridSlice","name","initialState","width","height","grid","livingNeighbors","reducers","setSize","state","action","payload","initializeGridAndNeighbors","i","row","j","push","actions","selectWidth","size","selectHeight","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAC,MAD4B;AAEjCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,KAAK,EAAE,CADE;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,IAAI,EAAE,EAHG;AAITC,IAAAA,eAAe,EAAC;AAJP,GAFoB;AAQjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAAP,CAAeR,KAA7B;AACAM,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAP,CAAeP,MAA9B;AACH,KAJK;AAKNQ,IAAAA,0BAA0B,EAAGH,KAAD,IAAW;AACnC,WAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACJ,KAAK,CAACL,MAAtB,EAA8BS,CAAC,EAA/B,EAAmC;AAC/B,YAAIC,GAAG,GAAG,EAAV;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,KAAK,CAACN,KAAtB,EAA6BY,CAAC,EAA9B,EAAkC;AAC9BD,UAAAA,GAAG,CAACE,IAAJ,CAAS,CAAT;AACH;;AACDP,QAAAA,KAAK,CAACH,eAAN,CAAsBU,IAAtB,CAA2BF,GAA3B;AACH;AAEJ;AAdK;AARuB,CAAD,CAA7B;AA0BP,OAAO,MAAM;AAACN,EAAAA;AAAD,IAAYR,SAAS,CAACiB,OAA5B;AACP,OAAO,MAAMC,WAAW,GAAGT,KAAK,IAAIA,KAAK,CAACU,IAAN,CAAWhB,KAAxC;AACP,OAAO,MAAMiB,YAAY,GAAGX,KAAK,IAAIA,KAAK,CAACU,IAAN,CAAWf,MAAzC;AAEP,eAAeJ,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const gridSlice = createSlice({\n    name:'size',\n    initialState:{\n        width: 0,\n        height: 0,\n        grid: [],\n        livingNeighbors:[],\n    },\n    reducers: {\n        setSize: (state, action) => {\n            state.width = action.payload.width;\n            state.height = action.payload.height;\n        },\n        initializeGridAndNeighbors: (state) => {\n            for (let i=0; i<state.height; i++) {\n                let row = [];\n                for (let j=0; j<state.width; j++) {\n                    row.push(0)\n                }\n                state.livingNeighbors.push(row)\n            }\n            \n        }\n    }\n});\n\nexport const {setSize} = gridSlice.actions;\nexport const selectWidth = state => state.size.width;\nexport const selectHeight = state => state.size.height;\n\nexport default gridSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}