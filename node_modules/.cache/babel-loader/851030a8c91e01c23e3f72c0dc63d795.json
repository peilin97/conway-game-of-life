{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/GameButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleGame, stopGame, selectPlay, selectStart } from './gameStateSlice';\nimport { resetGrid, selectCount, updateGridAndNeighbors } from './gridSlice';\nimport Button from 'react-bootstrap/Button';\nexport default function GameButton() {\n  _s();\n\n  const dispatch = useDispatch();\n  const play = useSelector(selectPlay);\n  const start = useSelector(selectStart);\n  const count = useSelector(selectCount);\n\n  function toggleState() {\n    if (count > 0) {\n      dispatch(toggleGame());\n    }\n  }\n\n  function resetState() {\n    // state = \"start\"\n    dispatch(stopGame());\n    dispatch(resetGrid());\n  }\n\n  function handleNext() {\n    if (!start) {\n      dispatch(updateGridAndNeighbors);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => toggleState(),\n      children: play\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleNext(),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => resetState(),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameButton, \"OGdw418gqTwSFNhejwLp6HcKNrM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = GameButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameButton\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/GameButton.jsx"],"names":["React","useState","useDispatch","useSelector","toggleGame","stopGame","selectPlay","selectStart","resetGrid","selectCount","updateGridAndNeighbors","Button","GameButton","dispatch","play","start","count","toggleState","resetState","handleNext"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,UADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,WAJJ,QAKQ,kBALR;AAMA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,sBAHJ,QAIQ,aAJR;AAKA,OAAOC,MAAP,MAAmB,wBAAnB;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,IAAI,GAAGX,WAAW,CAACG,UAAD,CAAxB;AACA,QAAMS,KAAK,GAAGZ,WAAW,CAACI,WAAD,CAAzB;AACA,QAAMS,KAAK,GAAGb,WAAW,CAACM,WAAD,CAAzB;;AAEA,WAASQ,WAAT,GAAuB;AACnB,QAAID,KAAK,GAAG,CAAZ,EAAe;AACXH,MAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACH;AACJ;;AAED,WAASc,UAAT,GAAsB;AAClB;AACAL,IAAAA,QAAQ,CAACR,QAAQ,EAAT,CAAR;AACAQ,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACH;;AAED,WAASW,UAAT,GAAsB;AAClB,QAAI,CAACJ,KAAL,EAAY;AACRF,MAAAA,QAAQ,CAACH,sBAAD,CAAR;AACH;AACJ;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMO,WAAW,EAAlC;AAAA,gBAAuCH;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMK,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMD,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BuBN,U;UACHV,W,EACJC,W,EACCA,W,EACAA,W;;;KAJMS,U","sourcesContent":["import React, {useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    toggleGame,\n    stopGame,\n    selectPlay,\n    selectStart,\n } from './gameStateSlice'\nimport {\n    resetGrid,\n    selectCount,\n    updateGridAndNeighbors,\n } from './gridSlice'\nimport Button from 'react-bootstrap/Button'\n\n\nexport default function GameButton() {\n    const dispatch = useDispatch()\n    const play = useSelector(selectPlay)\n    const start = useSelector(selectStart)\n    const count = useSelector(selectCount)\n\n    function toggleState() {\n        if (count > 0) {\n            dispatch(toggleGame())\n        }\n    }\n\n    function resetState() {\n        // state = \"start\"\n        dispatch(stopGame())\n        dispatch(resetGrid())\n    }\n\n    function handleNext() {\n        if (!start) {\n            dispatch(updateGridAndNeighbors)\n        }\n    }\n\n    return (\n        <div>\n            <Button onClick={() => toggleState()}>{play}</Button>\n            <Button onClick={() => handleNext()}>Next</Button>\n            <Button onClick={() => resetState()}>Reset</Button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}