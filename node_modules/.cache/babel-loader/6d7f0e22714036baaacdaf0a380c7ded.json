{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Cell.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleCell, selectGrid } from './gridSlice';\nimport { selectStart } from './gameStateSlice';\nimport { selectDeadColor, selectLivingColor } from './colorSlice'; // import Col from 'react-bootstrap/Col'\n\nexport default function Cell(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const grid = useSelector(selectGrid);\n  const start = useSelector(selectStart);\n  const livingColor = useSelector(selectLivingColor);\n  const deadColor = useSelector(selectDeadColor);\n  let colorStyle = {}; // let className = \"\"\n\n  function addLifeStatus() {\n    // className = \"col\"\n    if (grid[props.pos[0]][props.pos[1]] === 1) {\n      className += ' living';\n    } else {\n      className += ' dead';\n    }\n  }\n\n  addLifeStatus();\n\n  function clickCell() {\n    if (!start) {\n      dispatch(toggleCell(props.pos));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    onClick: () => clickCell()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cell, \"tZTVKJCSnU8V0yHDbR2mWjkKGt4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Cell.jsx"],"names":["React","useDispatch","useSelector","toggleCell","selectGrid","selectStart","selectDeadColor","selectLivingColor","Cell","props","dispatch","grid","start","livingColor","deadColor","colorStyle","addLifeStatus","pos","className","clickCell"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,UAAR,EACIC,UADJ,QACqB,aADrB;AAEA,SACIC,WADJ,QAEO,kBAFP;AAGA,SACIC,eADJ,EAEIC,iBAFJ,QAGO,cAHP,C,CAIA;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,IAAI,GAAGT,WAAW,CAACE,UAAD,CAAxB;AACA,QAAMQ,KAAK,GAAGV,WAAW,CAACG,WAAD,CAAzB;AACA,QAAMQ,WAAW,GAAGX,WAAW,CAACK,iBAAD,CAA/B;AACA,QAAMO,SAAS,GAAGZ,WAAW,CAACI,eAAD,CAA7B;AAEA,MAAIS,UAAU,GAAG,EAAjB,CAPgC,CAQhC;;AACA,WAASC,aAAT,GAAyB;AACrB;AACA,QAAIL,IAAI,CAACF,KAAK,CAACQ,GAAN,CAAU,CAAV,CAAD,CAAJ,CAAmBR,KAAK,CAACQ,GAAN,CAAU,CAAV,CAAnB,MAAqC,CAAzC,EAA4C;AAExCC,MAAAA,SAAS,IAAI,SAAb;AACH,KAHD,MAGO;AACHA,MAAAA,SAAS,IAAI,OAAb;AACH;AACJ;;AACDF,EAAAA,aAAa;;AAEb,WAASG,SAAT,GAAqB;AACjB,QAAI,CAACP,KAAL,EAAY;AACRF,MAAAA,QAAQ,CAACP,UAAU,CAACM,KAAK,CAACQ,GAAP,CAAX,CAAR;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEC,SAAhB;AAA2B,IAAA,OAAO,EAAE,MAAMC,SAAS;AAAnD;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GA9BuBX,I;UACHP,W,EACJC,W,EACCA,W,EACMA,W,EACFA,W;;;KALEM,I","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {toggleCell,\n    selectGrid} from './gridSlice'\nimport {\n    selectStart\n} from './gameStateSlice'\nimport {\n    selectDeadColor,\n    selectLivingColor,\n} from './colorSlice'\n// import Col from 'react-bootstrap/Col'\n\nexport default function Cell(props) {\n    const dispatch = useDispatch()\n    const grid = useSelector(selectGrid)\n    const start = useSelector(selectStart)\n    const livingColor = useSelector(selectLivingColor)\n    const deadColor = useSelector(selectDeadColor)\n\n    let colorStyle = {}\n    // let className = \"\"\n    function addLifeStatus() {\n        // className = \"col\"\n        if (grid[props.pos[0]][props.pos[1]] === 1) {\n            \n            className += ' living'\n        } else {\n            className += ' dead'\n        }\n    }\n    addLifeStatus();\n\n    function clickCell() {\n        if (!start) {\n            dispatch(toggleCell(props.pos))\n        }\n    }\n\n    return (\n        <div className={className} onClick={() => clickCell()}>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}