{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons';\nexport const gameStateSlice = createSlice({\n  name: 'gameState',\n  initialState: {\n    start: false,\n    play: \"Start\",\n    disabled: \"disabled\",\n    playSign: faPlay\n  },\n  reducers: {\n    toggleGame: state => {\n      state.start = !state.start;\n      state.play = state.play === \"Start\" ? \"Pause\" : \"Start\";\n      state.disabled = state.disabled === \"disabled\" ? \"\" : \"disabled\";\n    },\n    stopGame: state => {\n      state.start = false;\n      state.play = \"Start\";\n      state.disabled = \"disabled\";\n    }\n  }\n});\nexport const {\n  toggleGame,\n  stopGame\n} = gameStateSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectStart = state => state.gameState.start;\nexport const selectPlay = state => state.gameState.play;\nexport default gameStateSlice.reducer;","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/gameStateSlice.js"],"names":["createSlice","faPlay","faPause","gameStateSlice","name","initialState","start","play","disabled","playSign","reducers","toggleGame","state","stopGame","actions","selectStart","gameState","selectPlay","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SACEC,MADF,EAEEC,OAFF,QAGO,mCAHP;AAKA,OAAO,MAAMC,cAAc,GAAGH,WAAW,CAAC;AACxCI,EAAAA,IAAI,EAAE,WADkC;AAExCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,IAAI,EAAE,OAFM;AAGZC,IAAAA,QAAQ,EAAE,UAHE;AAIZC,IAAAA,QAAQ,EAAER;AAJE,GAF0B;AAQxCS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEC,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACN,KAAN,GAAc,CAACM,KAAK,CAACN,KAArB;AACAM,MAAAA,KAAK,CAACL,IAAN,GAAcK,KAAK,CAACL,IAAN,KAAe,OAAhB,GAA2B,OAA3B,GAAqC,OAAlD;AACAK,MAAAA,KAAK,CAACJ,QAAN,GAAkBI,KAAK,CAACJ,QAAN,KAAmB,UAApB,GAAkC,EAAlC,GAAuC,UAAxD;AACD,KALO;AAMRK,IAAAA,QAAQ,EAAED,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACN,KAAN,GAAc,KAAd;AACAM,MAAAA,KAAK,CAACL,IAAN,GAAa,OAAb;AACAK,MAAAA,KAAK,CAACJ,QAAN,GAAiB,UAAjB;AACD;AAVO;AAR8B,CAAD,CAAlC;AAsBP,OAAO,MAAM;AAAEG,EAAAA,UAAF;AAAcE,EAAAA;AAAd,IAA2BV,cAAc,CAACW,OAAhD,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAGH,KAAK,IAAIA,KAAK,CAACI,SAAN,CAAgBV,KAA7C;AACP,OAAO,MAAMW,UAAU,GAAGL,KAAK,IAAIA,KAAK,CAACI,SAAN,CAAgBT,IAA5C;AAEP,eAAeJ,cAAc,CAACe,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const gameStateSlice = createSlice({\r\n  name: 'gameState',\r\n  initialState: {\r\n    start: false,\r\n    play: \"Start\",\r\n    disabled: \"disabled\",\r\n    playSign: faPlay,\r\n  },\r\n  reducers: {\r\n    toggleGame: state => {\r\n      state.start = !state.start\r\n      state.play = (state.play === \"Start\") ? \"Pause\" : \"Start\"\r\n      state.disabled = (state.disabled === \"disabled\") ? \"\" : \"disabled\"\r\n    },\r\n    stopGame: state => {\r\n      state.start = false\r\n      state.play = \"Start\"\r\n      state.disabled = \"disabled\"\r\n    },\r\n  }\r\n});\r\n\r\nexport const { toggleGame, stopGame } = gameStateSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectStart = state => state.gameState.start;\r\nexport const selectPlay = state => state.gameState.play;\r\n\r\nexport default gameStateSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}