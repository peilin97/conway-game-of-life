{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/GameButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleGame, stopGame, selectPlay, selectStart } from './gameStateSlice';\nimport { resetGrid, selectCount, updateGridAndNeighbors } from './gridSlice';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faForward } from '@fortawesome/free-solid-svg-icons';\nexport default function GameButton() {\n  _s();\n\n  const dispatch = useDispatch();\n  const play = useSelector(selectPlay);\n  const start = useSelector(selectStart);\n  const count = useSelector(selectCount);\n\n  const toggleState = () => {\n    if (count > 0) {\n      dispatch(toggleGame());\n    }\n  };\n\n  const resetState = () => {\n    // state = \"start\"\n    dispatch(stopGame());\n    dispatch(resetGrid());\n  };\n\n  const handleNext = () => {\n    if (!start) {\n      dispatch(updateGridAndNeighbors);\n    }\n  };\n\n  const handleClear = () => {\n    if (!start) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleState,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), play]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: resetState,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameButton, \"OGdw418gqTwSFNhejwLp6HcKNrM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = GameButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameButton\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/GameButton.jsx"],"names":["React","useState","useDispatch","useSelector","toggleGame","stopGame","selectPlay","selectStart","resetGrid","selectCount","updateGridAndNeighbors","Button","FontAwesomeIcon","faPlay","faPause","faForward","GameButton","dispatch","play","start","count","toggleState","resetState","handleNext","handleClear"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,UADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAIIC,WAJJ,QAKQ,kBALR;AAMA,SACIC,SADJ,EAEIC,WAFJ,EAGIC,sBAHJ,QAIQ,aAJR;AAKA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACIC,MADJ,EAEIC,OAFJ,EAGIC,SAHJ,QAIQ,mCAJR;AAQA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,IAAI,GAAGf,WAAW,CAACG,UAAD,CAAxB;AACA,QAAMa,KAAK,GAAGhB,WAAW,CAACI,WAAD,CAAzB;AACA,QAAMa,KAAK,GAAGjB,WAAW,CAACM,WAAD,CAAzB;;AAEA,QAAMY,WAAW,GAAE,MAAM;AACrB,QAAID,KAAK,GAAG,CAAZ,EAAe;AACXH,MAAAA,QAAQ,CAACb,UAAU,EAAX,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMkB,UAAU,GAAG,MAAM;AACrB;AACAL,IAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AACAY,IAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACH,GAJD;;AAMA,QAAMe,UAAU,GAAG,MAAM;AACrB,QAAI,CAACJ,KAAL,EAAY;AACRF,MAAAA,QAAQ,CAACP,sBAAD,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMc,WAAW,GAAG,MAAM;AACtB,QAAI,CAACL,KAAL,EAAY,CAEX;AACJ,GAJD;;AAMA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAGE,WAAlB;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAER;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,EACsCK,IADtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAxCuBR,U;UACHd,W,EACJC,W,EACCA,W,EACAA,W;;;KAJMa,U","sourcesContent":["import React, {useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    toggleGame,\n    stopGame,\n    selectPlay,\n    selectStart,\n } from './gameStateSlice'\nimport {\n    resetGrid,\n    selectCount,\n    updateGridAndNeighbors,\n } from './gridSlice'\nimport Button from 'react-bootstrap/Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faPlay,\n    faPause,\n    faForward\n } from '@fortawesome/free-solid-svg-icons'\n\n\n\nexport default function GameButton() {\n    const dispatch = useDispatch()\n    const play = useSelector(selectPlay)\n    const start = useSelector(selectStart)\n    const count = useSelector(selectCount)\n\n    const toggleState= () => {\n        if (count > 0) {\n            dispatch(toggleGame())\n        }\n    }\n\n    const resetState = () => {\n        // state = \"start\"\n        dispatch(stopGame())\n        dispatch(resetGrid())\n    }\n\n    const handleNext = () => {\n        if (!start) {\n            dispatch(updateGridAndNeighbors)\n        }\n    }\n\n    const handleClear = () => {\n        if (!start) {\n            \n        }\n    }\n\n    return (\n        <div>\n            <Button onClick={ toggleState }>\n                <FontAwesomeIcon icon={faPlay} />{play}\n            </Button>\n            <Button onClick={handleNext}>Next</Button>\n            <Button onClick={resetState}>Reset</Button>\n            <Button onClick={handleClear}>Clear</Button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}