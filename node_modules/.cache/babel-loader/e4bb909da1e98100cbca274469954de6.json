{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/game/grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectGrid, selectWidth, selectHeight, updateGridAndNeighbors, setCellHeight, setCellWidth } from './gridSlice';\nimport { selectStart } from '../buttons/gameStateSlice';\nimport { selectSpeed } from '../speed/speedSlice';\nimport Cell from './Cell';\nimport './grid.css';\nexport default function Grid() {\n  _s();\n\n  const grid = useSelector(selectGrid);\n  const start = useSelector(selectStart);\n  const speed = useSelector(selectSpeed);\n  const width = useSelector(selectWidth);\n  const height = useSelector(selectHeight); // const cellWidth = useSelector(selectCellWidth);\n  // const cellHeight = useSelector(selectCellHeight);\n  // const [cellWidth, setCellWidth] = useState((setLength() / width).toFixed(2));\n  // const [cellHeight, setCellHeight] = useState((setLength() / height).toFixed(2));\n\n  const [sizeStyle, setSizeStyle] = useState({\n    width: `${cellWidth}px`,\n    height: `${cellHeight}px`\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (start) {\n        dispatch(updateGridAndNeighbors());\n      }\n    }, Number(speed));\n\n    const handleResize = () => {\n      console.log(\"handle resize\"); // setWindowWidth(window.innerWidth);\n      // let gridLength = setLength();\n\n      setCellWidth(computeCellLength(gridLength, width));\n      setCellHeight(computeCellLength(gridLength, height));\n      setSizeStyle({\n        width: `${cellWidth}px`,\n        height: `${cellHeight}px`\n      }); // if (isLG) {\n      //     setCellWidth(computeCellLength(700, width));\n      //     setCellHeight(computeCellLength(700, height));\n      // } else if (isMD) {\n      //     setCellWidth(computeCellLength(600, width));\n      //     setCellHeight(computeCellLength(600, height));\n      // } else if (isSM) {\n      //     setCellWidth(computeCellLength(500, width));\n      //     setCellHeight(computeCellLength(500, height));\n      // } else if (isXS) {\n      //     setCellWidth(computeCellLength(400, width));\n      //     setCellHeight(computeCellLength(400, height));\n      // } else {\n      //     setCellWidth(computeCellLength(300, width));\n      //     setCellHeight(computeCellLength(300, height));\n      // }\n      // setSizeStyle({\n      //     width: `${cellWidth}px`,\n      //     height: `${cellHeight}px`,\n      // });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return _ => {\n      window.removeEventListener('resize', handleResize);\n      clearTimeout(timer);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexRow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridContainer\",\n      children: grid.map(function (row, rowId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gridRow\",\n          children: row.map((val, colId) => /*#__PURE__*/_jsxDEV(Cell, {\n            pos: [rowId, colId],\n            sizeStyle: sizeStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"0218aGqB5QzewBUUM7g7+3bZQ9U=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/game/grid/Grid.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","selectGrid","selectWidth","selectHeight","updateGridAndNeighbors","setCellHeight","setCellWidth","selectStart","selectSpeed","Cell","Grid","grid","start","speed","width","height","sizeStyle","setSizeStyle","cellWidth","cellHeight","dispatch","timer","setTimeout","Number","handleResize","console","log","computeCellLength","gridLength","window","addEventListener","_","removeEventListener","clearTimeout","map","row","rowId","val","colId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectGrid,\n    selectWidth,\n    selectHeight,\n    updateGridAndNeighbors,\n    setCellHeight,\n    setCellWidth,\n} from './gridSlice';\nimport { selectStart } from '../buttons/gameStateSlice';\nimport { selectSpeed } from '../speed/speedSlice';\nimport Cell from './Cell';\nimport './grid.css';\n\nexport default function Grid() {\n    const grid = useSelector(selectGrid);\n    const start = useSelector(selectStart);\n    const speed = useSelector(selectSpeed);\n    const width = useSelector(selectWidth);\n    const height = useSelector(selectHeight);\n    // const cellWidth = useSelector(selectCellWidth);\n    // const cellHeight = useSelector(selectCellHeight);\n    // const [cellWidth, setCellWidth] = useState((setLength() / width).toFixed(2));\n    // const [cellHeight, setCellHeight] = useState((setLength() / height).toFixed(2));\n    const [sizeStyle, setSizeStyle] = useState({\n        width: `${cellWidth}px`,\n        height: `${cellHeight}px`,\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (start) {\n                dispatch(updateGridAndNeighbors());\n            }\n        }, Number(speed));\n        const handleResize = () => {\n            console.log(\"handle resize\");\n            // setWindowWidth(window.innerWidth);\n            // let gridLength = setLength();\n            setCellWidth(computeCellLength(gridLength, width));\n            setCellHeight(computeCellLength(gridLength, height));\n            setSizeStyle({\n                width: `${cellWidth}px`,\n                height: `${cellHeight}px`,\n            });\n            // if (isLG) {\n            //     setCellWidth(computeCellLength(700, width));\n            //     setCellHeight(computeCellLength(700, height));\n            // } else if (isMD) {\n            //     setCellWidth(computeCellLength(600, width));\n            //     setCellHeight(computeCellLength(600, height));\n            // } else if (isSM) {\n            //     setCellWidth(computeCellLength(500, width));\n            //     setCellHeight(computeCellLength(500, height));\n            // } else if (isXS) {\n            //     setCellWidth(computeCellLength(400, width));\n            //     setCellHeight(computeCellLength(400, height));\n            // } else {\n            //     setCellWidth(computeCellLength(300, width));\n            //     setCellHeight(computeCellLength(300, height));\n            // }\n            // setSizeStyle({\n            //     width: `${cellWidth}px`,\n            //     height: `${cellHeight}px`,\n            // });\n        };\n        window.addEventListener('resize', handleResize);\n        return _ => {\n            window.removeEventListener('resize', handleResize);\n            clearTimeout(timer);\n        };\n    });\n\n    return (\n        <div className=\"flexRow\">\n            <div className=\"gridContainer\">\n                {grid.map(function (row, rowId) {\n                    return (\n                        <div className=\"gridRow\">\n                            {row.map((val, colId) => (\n                                <Cell pos={[rowId, colId]} sizeStyle={sizeStyle}/>\n                            ))}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}