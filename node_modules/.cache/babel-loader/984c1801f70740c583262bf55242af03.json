{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectWidth, selectHeight } from './sizeSlice';\nimport Cell from './Cell';\nexport default function Grid() {\n  _s();\n\n  const width = useSelector(selectWidth);\n  const height = useSelector(selectHeight);\n\n  function generateInitialGrid() {\n    const initialGrid = [];\n\n    for (let i = 0; i < height; i++) {\n      let row = [];\n\n      for (let j = 0; j < width; j++) {\n        row.push(Math.round(Math.random()));\n      }\n\n      initialGrid.push(row);\n    }\n\n    return initialGrid;\n  }\n\n  const initialGrid = generateInitialGrid();\n  const [grid, updateGrid] = useState(initialGrid);\n  console.log(initialGrid);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), grid.map(function (row, rowId) {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: row.map((val, colId) => /*#__PURE__*/_jsxDEV(Cell, {\n          life: val\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"mXq3UGy5tBMV+BNWqJOqQoHx5b8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Grid.jsx"],"names":["React","useState","Container","Row","Col","useDispatch","useSelector","selectWidth","selectHeight","Cell","Grid","width","height","generateInitialGrid","initialGrid","i","row","j","push","Math","round","random","grid","updateGrid","console","log","map","rowId","val","colId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,aAA1C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,KAAK,GAAGL,WAAW,CAACC,WAAD,CAAzB;AACA,QAAMK,MAAM,GAAGN,WAAW,CAACE,YAAD,CAA1B;;AACA,WAASK,mBAAT,GAA+B;AAC3B,UAAMC,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,MAAhB,EAAwBG,CAAC,EAAzB,EAA6B;AACzB,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACN,KAAhB,EAAuBM,CAAC,EAAxB,EAA4B;AACxBD,QAAAA,GAAG,CAACE,IAAJ,CAASC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAT;AACH;;AACDP,MAAAA,WAAW,CAACI,IAAZ,CAAiBF,GAAjB;AACH;;AACD,WAAOF,WAAP;AACH;;AACD,QAAMA,WAAW,GAAGD,mBAAmB,EAAvC;AACA,QAAM,CAACS,IAAD,EAAOC,UAAP,IAAqBtB,QAAQ,CAACa,WAAD,CAAnC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKQ,IAAI,CAACI,GAAL,CAAS,UAASV,GAAT,EAAcW,KAAd,EAAqB;AAC3B,0BACI,QAAC,GAAD;AAAA,kBACCX,GAAG,CAACU,GAAJ,CACG,CAACE,GAAD,EAAMC,KAAN,kBAAe,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADlB;AADD;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAnCuBlB,I;UACNJ,W,EACCA,W;;;KAFKI,I","sourcesContent":["import React, { useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectWidth, selectHeight } from './sizeSlice'\nimport Cell from './Cell'\n\nexport default function Grid() {\n    const width = useSelector(selectWidth)\n    const height = useSelector(selectHeight)\n    function generateInitialGrid() {\n        const initialGrid = []\n        for (let i=0; i<height; i++) {\n            let row = [];\n            for (let j=0; j<width; j++) {\n                row.push(Math.round(Math.random()))\n            }\n            initialGrid.push(row)\n        }\n        return initialGrid\n    }\n    const initialGrid = generateInitialGrid()\n    const [grid, updateGrid] = useState(initialGrid)\n    console.log(initialGrid)\n    return (\n        <Container>\n            <Row>\n                <Col>1</Col>\n                <Col>2</Col>\n                <Col>3</Col>\n            </Row>\n            {grid.map(function(row, rowId) {\n                return (\n                    <Row>\n                    {row.map(\n                        (val, colId)=> <Cell life={val}/>\n                    )}\n                    </Row>\n                    )\n            })}\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}