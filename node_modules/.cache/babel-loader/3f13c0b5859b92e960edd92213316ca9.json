{"ast":null,"code":"'use strict';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Color.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDeadColor, selectLivingColor } from './colorSlice';\nexport default function Color() {\n  _s();\n\n  const [displayColorPicker, setDisplay] = useState(false);\n  const [color, setLivingColor] = useState({\n    r: '0',\n    g: '0',\n    b: '0',\n    a: '1'\n  }); // const [livingColor, setLivingColor] = useState({r: '0', g: '0', b: '0', a: '1',})\n\n  const [deadColor, setDeadColor] = useState({\n    r: '255',\n    g: '255',\n    b: '255',\n    a: '1'\n  });\n  const styles = reactCSS({\n    'default': {\n      color: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        // background: `rgba(${ livingColor.r }, ${ livingColor.g }, ${ livingColor.b }, ${ livingColor.a })`,\n        background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n      },\n      //   living: {\n      //     background: `rgba(${ livingColor.r }, ${ livingColor.g }, ${ livingColor.b }, ${ livingColor.a })`,\n      //   },\n      dead: {\n        background: `rgba(${deadColor.r}, ${deadColor.g}, ${deadColor.b}, ${deadColor.a})`\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2'\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      }\n    }\n  });\n\n  const handleClick = () => {\n    setDisplay(!displayColorPicker);\n  };\n\n  const handleClose = () => {\n    setDisplay(false);\n  };\n\n  const handleChange = (color, type) => {\n    if (type === \"living\") {\n      setLivingColor(color.rgb);\n    } else {\n      setDeadColor(color.rgb);\n    } // setColor(color.rgb)\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.swatch,\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), displayColorPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.popover,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.cover,\n        onClick: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n        color: color,\n        onChange: handleChange(color, \"living\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 36\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Color, \"ovzm0okYxr3DDaWCclrkjrL75YM=\");\n\n_c = Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Color.jsx"],"names":["React","useState","reactCSS","SketchPicker","useDispatch","useSelector","setDeadColor","selectLivingColor","Color","displayColorPicker","setDisplay","color","setLivingColor","r","g","b","a","deadColor","styles","width","height","borderRadius","background","dead","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","handleClick","handleClose","handleChange","type","rgb"],"mappings":"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","sourcesContent":["'use strict'\n\nimport React, {useState} from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    setDeadColor,\n    selectLivingColor,\n} from './colorSlice'\n\n\nexport default function Color() {\n    const [displayColorPicker, setDisplay] = useState(false)\n    const [color, setLivingColor] = useState({r: '0', g: '0', b: '0', a: '1',})\n    // const [livingColor, setLivingColor] = useState({r: '0', g: '0', b: '0', a: '1',})\n    const [deadColor, setDeadColor] = useState({r: '255', g: '255', b: '255', a: '1',})\n    const styles = reactCSS({\n        'default': {\n          color: {\n            width: '36px',\n            height: '14px',\n            borderRadius: '2px',\n            // background: `rgba(${ livingColor.r }, ${ livingColor.g }, ${ livingColor.b }, ${ livingColor.a })`,\n            background: `rgba(${ color.r }, ${ color.g }, ${ color.b }, ${ color.a })`,\n          },\n        //   living: {\n        //     background: `rgba(${ livingColor.r }, ${ livingColor.g }, ${ livingColor.b }, ${ livingColor.a })`,\n        //   },\n          dead: {\n            background: `rgba(${ deadColor.r }, ${ deadColor.g }, ${ deadColor.b }, ${ deadColor.a })`,\n          },\n          swatch: {\n            padding: '5px',\n            background: '#fff',\n            borderRadius: '1px',\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n            display: 'inline-block',\n            cursor: 'pointer',\n          },\n          popover: {\n            position: 'absolute',\n            zIndex: '2',\n          },\n          cover: {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n          },\n        },\n      });\n\n    const handleClick = () => {\n        setDisplay(!displayColorPicker)\n    };\n    \n    const handleClose = () => {\n        setDisplay(false)\n    };\n    \n    const handleChange = (color, type) => {\n        if (type === \"living\") {\n            setLivingColor(color.rgb)\n        } else {\n            setDeadColor(color.rgb)\n        }\n        // setColor(color.rgb)\n    };\n\n    return (\n        <div>\n            <div style={ styles.swatch } onClick={ handleClick }>\n            <div style={styles.color} />\n            </div>\n            { displayColorPicker ? <div style={ styles.popover }>\n            <div style={ styles.cover } onClick={ handleClose }/>\n            <SketchPicker color={ color } onChange={ handleChange(color, \"living\") } />\n            </div> : null }\n\n            {/* <div style={ styles.swatch } onClick={ handleClick }>\n            <div style={ {...styles.color, ...styles.dead} } />\n            </div>\n            { displayColorPicker ? <div style={ styles.popover }>\n            <div style={ styles.cover } onClick={ handleClose }/>\n            <SketchPicker color={ deadColor } onChange={ handleChange(deadColor, \"dead\") } />\n            </div> : null } */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}