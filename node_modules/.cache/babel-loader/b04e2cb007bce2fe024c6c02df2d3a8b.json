{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { resetGrid, initializeGridAndNeighbors, setCellSize, setGridLength } from '../game/grid/gridSlice';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './home.css';\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  dispatch(resetGrid());\n  const [width, setWidth] = useState(50);\n  const [height, setHeight] = useState(50);\n\n  const handleSizeChange = () => {\n    dispatch({\n      type: 'grid/setSize',\n      payload: {\n        width: width,\n        height: height\n      }\n    });\n    dispatch(initializeGridAndNeighbors());\n    dispatch(setGridLength());\n    dispatch(setCellSize());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customJumbotron homeContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"First, set the width and the height!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"forWidth\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Width: \", width, \" cells\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          custom: true,\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: width,\n          onChange: e => setWidth(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"forHeight\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Height: \", height, \" cells\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          custom: true,\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: height,\n          onChange: e => setHeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      onClick: handleSizeChange,\n      exact: true,\n      to: '/lifesimulation',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-dark\",\n        children: \"Enter the Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"Sh+0nW6X8WuoLAY2GKX1NYl/BMc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/peilin-guo-assignment2/src/home/Home.jsx"],"names":["React","useState","useDispatch","Link","resetGrid","initializeGridAndNeighbors","setCellSize","setGridLength","Button","Form","Home","dispatch","width","setWidth","height","setHeight","handleSizeChange","type","payload","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACIC,SADJ,EAEIC,0BAFJ,EAGIC,WAHJ,EAIIC,aAJJ,QAKO,wBALP;AAMA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,YAAP;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAS,EAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMe,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAE;AAAEN,QAAAA,KAAK,EAAEA,KAAT;AAAgBE,QAAAA,MAAM,EAAEA;AAAxB;AAFJ,KAAD,CAAR;AAIAH,IAAAA,QAAQ,CAACN,0BAA0B,EAA3B,CAAR;AACAM,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACAI,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,UAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCAAoBM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,MAAM,MADV;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,GAAG,EAAC,IAHR;AAII,UAAA,GAAG,EAAC,KAJR;AAKI,UAAA,KAAK,EAAEA,KALX;AAMI,UAAA,QAAQ,EAAEO,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,iCAAqBP,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,MAAM,MADV;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,GAAG,EAAC,IAHR;AAII,UAAA,GAAG,EAAC,KAJR;AAKI,UAAA,KAAK,EAAEA,MALX;AAMI,UAAA,QAAQ,EAAEK,CAAC,IAAIJ,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAN5B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eA0BI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEL,gBAAf;AAAiC,MAAA,KAAK,MAAtC;AAAuC,MAAA,EAAE,EAAE,iBAA3C;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAhDuBN,I;UACHR,W;;;KADGQ,I","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n    resetGrid,\n    initializeGridAndNeighbors,\n    setCellSize,\n    setGridLength,\n} from '../game/grid/gridSlice';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './home.css';\n\nexport default function Home() {\n    const dispatch = useDispatch();\n    dispatch(resetGrid());\n    const [width, setWidth] = useState(50);\n    const [height, setHeight] = useState(50);\n\n    const handleSizeChange = () => {\n        dispatch({\n            type: 'grid/setSize',\n            payload: { width: width, height: height },\n        });\n        dispatch(initializeGridAndNeighbors());\n        dispatch(setGridLength());\n        dispatch(setCellSize());\n    };\n\n    return (\n        <div className=\"customJumbotron homeContainer\">\n            <h1>First, set the width and the height!</h1>\n            <Form>\n                <Form.Group controlId=\"forWidth\">\n                    <Form.Label>Width: {width} cells</Form.Label>\n                    <Form.Control\n                        custom\n                        type=\"range\"\n                        min=\"10\"\n                        max=\"100\"\n                        value={width}\n                        onChange={e => setWidth(e.target.value)}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"forHeight\">\n                    <Form.Label>Height: {height} cells</Form.Label>\n                    <Form.Control\n                        custom\n                        type=\"range\"\n                        min=\"10\"\n                        max=\"100\"\n                        value={height}\n                        onChange={e => setHeight(e.target.value)}\n                    />\n                </Form.Group>\n            </Form>\n            <Link onClick={handleSizeChange} exact to={'/lifesimulation'}>\n                <Button variant=\"outline-dark\">Enter the Game</Button>\n            </Link>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}