{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Color.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setDeadColor, selectDeadColor, setLivingColor, selectLivingColor } from './colorSlice';\nimport { selectStart } from './gameStateSlice';\nexport default function Color() {\n  _s();\n\n  const dispatch = useDispatch();\n  const livingColor = useSelector(selectLivingColor);\n  const deadColor = useSelector(selectDeadColor);\n  const start = useSelector(selectStart);\n  const [displayLivingPicker, setLivingDisplay] = useState(false);\n  const [displayDeadPicker, setDeadDisplay] = useState(false);\n  const [heatMap, setHeatMap] = useState(false);\n  const styles = reactCSS({\n    'default': {\n      living: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: `rgba(${livingColor.r}, ${livingColor.g}, ${livingColor.b}, ${livingColor.a})`\n      },\n      dead: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: `rgba(${deadColor.r}, ${deadColor.g}, ${deadColor.b}, ${deadColor.a})`\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2'\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      }\n    }\n  });\n\n  const handleLivingClick = () => {\n    if (!start) {\n      setLivingDisplay(!displayLivingPicker);\n    }\n  };\n\n  const handleDeadClick = () => {\n    if (!start) {\n      setDeadDisplay(!displayDeadPicker);\n    }\n  };\n\n  const handleLivingClose = () => {\n    if (!start) {\n      setLivingDisplay(false);\n    }\n  };\n\n  const handleDeadClose = () => {\n    if (!start) {\n      setDeadDisplay(false);\n    }\n  };\n\n  const handleLivingChange = color => {\n    if (!start) {\n      dispatch(setLivingColor(color.rgb));\n    }\n  };\n\n  const handleDeadChange = color => {\n    if (!start) {\n      dispatch(setDeadColor(color.rgb));\n    }\n  };\n\n  const toggleHeatMap = () => {\n    setHeatMap(!heatMap);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Living Color:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.swatch,\n        onClick: handleLivingClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.living\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), displayLivingPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.popover,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cover,\n          onClick: handleLivingClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n          color: livingColor,\n          onChange: handleLivingChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Dead Color:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.swatch,\n        onClick: handleDeadClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.dead\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), displayDeadPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.popover,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cover,\n          onClick: handleDeadClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {\n          color: deadColor,\n          onChange: handleDeadChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 35\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"heatmap\",\n      onChange: toggleHeatMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"heatmap\",\n      children: \"Heat Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Color, \"GXCytbIgeQGTo++FMWa0mPfFR/4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Color;\n\nvar _c;\n\n$RefreshReg$(_c, \"Color\");","map":{"version":3,"sources":["/Users/peilinguo/Documents/NEU/cs5610/cs5610-assignments/peilin-guo-assignment2/src/Color.jsx"],"names":["React","useState","reactCSS","SketchPicker","useDispatch","useSelector","setDeadColor","selectDeadColor","setLivingColor","selectLivingColor","selectStart","Color","dispatch","livingColor","deadColor","start","displayLivingPicker","setLivingDisplay","displayDeadPicker","setDeadDisplay","heatMap","setHeatMap","styles","living","width","height","borderRadius","background","r","g","b","a","dead","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","handleLivingClick","handleDeadClick","handleLivingClose","handleDeadClose","handleLivingChange","color","rgb","handleDeadChange","toggleHeatMap"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    setDeadColor,\n    selectDeadColor,\n    setLivingColor,\n    selectLivingColor,\n} from './colorSlice'\nimport {\n    selectStart\n} from './gameStateSlice'\n\n\nexport default function Color() {\n    const dispatch = useDispatch()\n    const livingColor = useSelector(selectLivingColor)\n    const deadColor = useSelector(selectDeadColor)\n    const start = useSelector(selectStart)\n    const [displayLivingPicker, setLivingDisplay] = useState(false)\n    const [displayDeadPicker, setDeadDisplay] = useState(false)\n    const [heatMap, setHeatMap] = useState(false)\n    \n    const styles = reactCSS({\n        'default': {\n          living: {\n            width: '36px',\n            height: '14px',\n            borderRadius: '2px',\n            background: `rgba(${ livingColor.r }, ${ livingColor.g }, ${ livingColor.b }, ${ livingColor.a })`,\n          },\n          dead: {\n            width: '36px',\n            height: '14px',\n            borderRadius: '2px',\n            background: `rgba(${ deadColor.r }, ${ deadColor.g }, ${ deadColor.b }, ${ deadColor.a })`,\n          },\n          swatch: {\n            padding: '5px',\n            background: '#fff',\n            borderRadius: '1px',\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n            display: 'inline-block',\n            cursor: 'pointer',\n          },\n          popover: {\n            position: 'absolute',\n            zIndex: '2',\n          },\n          cover: {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n          },\n        },\n      });\n\n    const handleLivingClick = () => {\n        if (!start) {\n            setLivingDisplay(!displayLivingPicker)\n        }\n    };\n\n    const handleDeadClick = () => {\n        if (!start) {\n            setDeadDisplay(!displayDeadPicker)\n        }\n    };\n    \n    const handleLivingClose = () => {\n        if (!start) {\n            setLivingDisplay(false)\n        }\n    };\n\n    const handleDeadClose = () => {\n        if (!start) {\n            setDeadDisplay(false)\n        }\n    };\n\n    const handleLivingChange = (color) => {\n        if (!start) {\n            dispatch(setLivingColor(color.rgb))\n        }\n    };\n\n    const handleDeadChange = (color) => {\n        if (!start) {\n            dispatch(setDeadColor(color.rgb))\n        }\n    };\n\n    const toggleHeatMap = () => {\n        setHeatMap(!heatMap)\n        \n    }\n\n    return (\n        <div>\n            <div>Living Color:\n            <div style={ styles.swatch } onClick={ handleLivingClick }>\n            <div style={ styles.living } />\n            </div>\n            { displayLivingPicker ? <div style={ styles.popover }>\n            <div style={ styles.cover } onClick={ handleLivingClose }/>\n            <SketchPicker color={ livingColor } onChange={ handleLivingChange } />\n            </div> : null }\n            </div>\n\n            <div> Dead Color:\n            <div style={ styles.swatch } onClick={ handleDeadClick }>\n            <div style={ styles.dead } />\n            </div>\n            { displayDeadPicker ? <div style={ styles.popover }>\n            <div style={ styles.cover } onClick={ handleDeadClose }/>\n            <SketchPicker color={ deadColor } onChange={ handleDeadChange } />\n            </div> : null }\n            </div>\n\n            <input type=\"checkbox\" id=\"heatmap\" onChange={ toggleHeatMap } />\n            <label for=\"heatmap\" >Heat Map</label>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}